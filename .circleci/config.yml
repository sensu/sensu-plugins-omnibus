version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.16

executors:
  centos-6:
    docker:
      - image: centos:6
    environment:
      PLATFORM: centos
      PACKAGECLOUD_DISTROS: el/6
  centos-7:
    docker:
      - image: centos:7
    environment:
      PLATFORM: centos
      PACKAGECLOUD_DISTROS: el/7
  centos-8:
    docker:
      - image: centos:8
    environment:
      PLATFORM: centos
      PACKAGECLOUD_DISTROS: el/8
  debian-8:
    docker:
      - image: debian:8
    environment:
      PLATFORM: ubuntu
      PACKAGECLOUD_DISTROS: debian/jessie
  debian-9:
    docker:
      - image: debian:9
    environment:
      PLATFORM: ubuntu
      PACKAGECLOUD_DISTROS: debian/stretch
  debian-10:
    docker:
      - image: debian:9
    environment:
      PLATFORM: ubuntu
      PACKAGECLOUD_DISTROS: debian/buster
  ubuntu-1404:
    docker:
      - image: ubuntu:14.04
    environment:
      PLATFORM: ubuntu
      PACKAGECLOUD_DISTROS: ubuntu/trusty
  ubuntu-1604:
    docker:
      - image: ubuntu:16.04
    environment:
      PLATFORM: ubuntu
      PACKAGECLOUD_DISTROS: ubuntu/quantal
  ubuntu-1804:
    docker:
      - image: ubuntu:18.04
    environment:
      PLATFORM: ubuntu
      PACKAGECLOUD_DISTROS: ubuntu/bionic
  ubuntu-2004:
    docker:
      - image: ubuntu:20.04
    environment:
      PLATFORM: ubuntu
      PACKAGECLOUD_DISTROS: ubuntu/focal

commands:
  install_python:
    parameters:
      version:
        type: string
        default: 3.8.5
    steps:
      - run: |
          if [ "$PLATFORM" = "ubuntu" ]; then
            apt-get update
            apt-get install -y ca-certificates curl git build-essential
          elif [ "$PLATFORM" = "centos" ]; then
            yum -y groupinstall 'Development Tools'
            yum -y install git
          fi
      - restore_cache:
          key: python-<< parameters.version >>-${PACKAGECLOUD_DISTROS}-v1
      - run:
          name: Install pyenv
          command: |
            if which pyenv; then
              echo "pyenv is already installed."
              exit 0
            fi
            curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
      - run: echo 'export PATH="$HOME/.pyenv/bin:$PATH"' >> $BASH_ENV
      - run: echo 'eval "$(pyenv init -)"' >> $BASH_ENV
      - run:
          name: Install Python << parameters.version >>
          command: |
            if which python; then
              if python -V | grep "<< parameters.version >>"; then
                echo "python << parameters.version >> is already installed."
                exit 0
              else
                echo "python is already installed but it is the wrong version."
              fi
            fi
            set -x
            pyenv install -v << parameters.version >>
      - run: pyenv global << parameters.version >>
      - save_cache:
          key: python-<< parameters.version >>-${PACKAGECLOUD_DISTROS}-v1
          paths:
            - ${HOME}/.pyenv

jobs:
  build:
    executor: << parameters.executor >>
    working_directory: /opt/sensu-plugins-omnibus
    parameters:
      executor:
        type: string
      arch:
        type: string
    steps:
      - checkout
      - install_python
      - restore_cache:
          key: omnibus-${PACKAGECLOUD_DISTROS}-v2
      - run: ./docker-build.sh
      - save_cache:
          key: omnibus-${PACKAGECLOUD_DISTROS}-v2
          paths:
            - /opt/sensu-plugins-omnibus/local
            - /usr/bin/sensu-install
      - aws-s3/sync:
          arguments: --acl public-read
          aws-access-key-id: ARTIFACT_KEY
          aws-secret-access-key: ARTIFACT_SECRET
          aws-region: ARTIFACT_REGION
          from: pkg
          to: "s3://${ARTIFACTS_BUCKET}/$(date +'%Y-%m-%d_%T')_${CIRCLE_WORKFLOW_ID}"
      
workflows:
  build:
    jobs:
      - build:
          name: centos-6-<< matrix.arch >>
          executor: centos-6
          matrix:
            parameters:
              arch: [ i386, x86_64 ]
      - build:
          name: centos-7-<< matrix.arch >>
          executor: centos-7
          matrix:
            parameters:
              arch: [ i386, x86_64 ]
      - build:
          name: centos-8-<< matrix.arch >>
          executor: centos-8
          matrix:
            parameters:
              arch: [ x86_64 ]
      - build:
          name: debian-8-<< matrix.arch >>
          executor: debian-8
          matrix:
            parameters:
              arch: [ i386, x86_64 ]
      - build:
          name: debian-9-<< matrix.arch >>
          executor: debian-9
          matrix:
            parameters:
              arch: [ i386, x86_64 ]
      - build:
          name: debian-10-<< matrix.arch >>
          executor: debian-10
          matrix:
            parameters:
              arch: [ i386, x86_64 ]
      - build:
          name: ubuntu-1404-<< matrix.arch >>
          executor: ubuntu-1404
          matrix:
            parameters:
              arch: [ i386, x86_64 ]
      - build:
          name: ubuntu-1604-<< matrix.arch >>
          executor: ubuntu-1604
          matrix:
            parameters:
              arch: [ i386, x86_64 ]
      - build:
          name: ubuntu-1804-<< matrix.arch >>
          executor: ubuntu-1804
          matrix:
            parameters:
              arch: [ i386, x86_64 ]
      - build:
          name: ubuntu-2004-<< matrix.arch >>
          executor: ubuntu-2004
          matrix:
            parameters:
              arch: [ i386, x86_64 ]
